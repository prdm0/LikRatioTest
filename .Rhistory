rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
eval(parse(text = paste0("names", deparse(substitute(list(...))))))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
parse(text = paste0("names", deparse(substitute(list(...)))))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
paste0("names", deparse(substitute(list(...))))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
deparse(substitute(list(...)))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
as.character(deparse(substitute(list(...))))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
paste0("names(",as.character(deparse(substitute(list(...)))),")")
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")"))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
# eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
n_dot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
sapply(X = var, FUN = force)
eval.parent(parse(text = paste(par0[[1]], "<-", par0[[2]])), n = 2)
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
expression("a")
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
myforce <- function(x){
eval(parse(text = paste0("force(", x, ")")))
}
sapply(X = var, FUN = myforce)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
# myforce <- function(x){
#   eval(parse(text = paste0("force(", x, ")")))
# }
#
# sapply(X = var, FUN = myforce)
#
# eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
var
# myforce <- function(x){
#   eval(parse(text = paste0("force(", x, ")")))
# }
#
# sapply(X = var, FUN = myforce)
#
# eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 6)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
# myforce <- function(x){
#   eval(parse(text = paste0("force(", x, ")")))
# }
#
# sapply(X = var, FUN = myforce)
#
# eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
var
# myforce <- function(x){
#   eval(parse(text = paste0("force(", x, ")")))
# }
#
# sapply(X = var, FUN = myforce)
#
# eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
# return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
myforce <- function(x){
eval(parse(text = paste0("force(", x, ")")))
}
myforce("theta")
?..1
...elt(1)
var = c("a")
var = c("a", "b")
eval(parse(text = paste0(var[1] <- 1))
)
a
parse(text = paste0(var[1]))
paste0(var[i], "<-", 1))
paste0(var[i], "<-", 1)
paste0(var[1], "<-", 1)
var
var <- c("a", b)
var <- c("a", "b")
paste0(var[1], "<-", 1)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7,9)), theta = 7, a = 8)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "sigma"), c(7, 9)), theta = 7)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 9, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("alpha", 7), theta = 7, sigma = 3)
set.seed(0L)
rew(n = 2L, alpha = 7, sigma = 3, theta = 7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "theta"), c(8,6)), sigma = 13)
set.seed(0L)
rew(n = 2L, alpha = 8, sigma = 13, theta = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "theta"), c(8,6)), sigma = 13)
set.seed(0L)
rew(n = 2L, alpha = 8, sigma = 13, theta = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "theta"), c(8,6)), sigma = 13)
set.seed(0L)
rew(n = 2L, alpha = 8, sigma = 13, theta = 6)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list(c("alpha", "theta"), c(8,6)), sigma = 13)
set.seed(0L)
rew(n = 2L, alpha = 8, sigma = 13, theta = 6)
