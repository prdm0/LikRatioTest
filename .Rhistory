pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 100L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("sigma", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 100L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("theta", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 100L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("alpha", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("sigma", 1), alpha = 2, theta = 3)
set.seed(0L)
rew(n = 2L, alpha = 2, sigma = 1, theta = 3)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("theta", 1), alpha = 2, theta = 3)
set.seed(0L)
rew(n = 2L, alpha = 2, sigma = 1, theta = 1)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("theta", 1), alpha = 2, sigma = 1)
set.seed(0L)
rew(n = 2L, alpha = 2, sigma = 1, theta = 1)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 1000L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("sigma", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
q0 <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
q0(rew, n = 2, par0 = list("sigma", 1), alpha = 1, theta = 2)
rew()
set.seed(0)
q0(rew, n = 2, par0 = list("sigma", 1.7), alpha = 2.2, theta = 2.1)
set.seed(0)
rew(n = 2L, alpha = 2.2, sigma = 1.7, theta = 2.1)
set.seed(0)
q0(rew, n = 2, par0 = list("sigma", 1.7), alpha = 2.2, theta = 2.1)
set.seed(0)
rew(n = 2L, alpha = 2.2, sigma = 1.7, theta = 2.1)
set.seed(0)
q0(rew, n = 2, par0 = list("sigma", 1.7), alpha = 2.2, theta = 2.1)
set.seed(0)
rew(n = 2L, theta = 2.1, alpha = 2.2, sigma = 1.7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("theta", 1), alpha = 2, sigma = 1)
set.seed(0L)
rew(n = 2L, alpha = 2, sigma = 1, theta = 1)
set.seed(0)
q0(rew, n = 2, par0 = list("sigma", 1.7), alpha = 2.2, theta = 2.1)
set.seed(0)
rew(n = 2L, theta = 2.1, alpha = 2.2, sigma = 1.7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0L)
f(q = rew, n = 2L, par0 = list("theta", 1), alpha = 2, sigma = 1)
set.seed(0L)
rew(n = 2L, alpha = 2, sigma = 1, theta = 1)
set.seed(0)
q0(rew, n = 2, par0 = list("sigma", 1.7), alpha = 2.2, theta = 2.1)
set.seed(0)
rew(n = 2L, theta = 2.1, alpha = 2.2, sigma = 1.7)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
f <- function(q, n, par0, ...){
ndot <- ...length()
var <- eval(parse(text = paste0("names(",as.character(deparse(substitute(list(...)))),")")))
for(i in 1:ndot){
eval(parse(text = paste0(var[i], " <- ", ...elt(i))))
}
#new_q <- function(n) body(q)
eval(parse(text = paste(par0[[1]], "<-", par0[[2]])))
return(eval(body(q)))
}
set.seed(0)
q0(rew, n = 2, par0 = list(c("theta", "alpha"), c(1.3, 0.4)), sigma = 0.9)
set.seed(0)
rew(n = 2L, theta = 1.3, alpha = 0.4, sigma = 0.9)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 500L,
n = 1000L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("sigma", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 500L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("sigma", 1),
ncores = 4L,
alpha = 2,
sigma = 4,
theta = 3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list("alpha", 1),
ncores = 4L,
alpha = 1.2,
sigma = 1.5,
theta = 1.3
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.5, 1.8)),
ncores = 4L,
alpha = 1.2,
sigma = 1,
theta = 1.3
)
tictoc::toc()
pdf_w <- function(par, x, var = NULL){
alpha <- par[1]
beta <- par[2]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
dweibull(x, shape = alpha, scale = beta)
}
rw <- function(n = 1L, alpha, beta){
rweibull(n = n, shape = alpha, scale = beta)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1),
par0 = list(c("alpha", "beta"), c(1.5, 1.8)),
ncores = 4L,
alpha = 1.7,
beta = 1.2
)
tictoc::toc()
pdf_w <- function(par, x, var = NULL){
alpha <- par[1]
beta <- par[2]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
dweibull(x, shape = alpha, scale = beta)
}
rw <- function(n = 1L, alpha, beta){
rweibull(n = n, shape = alpha, scale = beta)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1),
par0 = list(beta, 1.8),
ncores = 4L,
alpha = 1.7,
beta = 1.2
)
tictoc::toc()
pdf_w <- function(par, x, var = NULL){
alpha <- par[1]
beta <- par[2]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
dweibull(x, shape = alpha, scale = beta)
}
rw <- function(n = 1L, alpha, beta){
rweibull(n = n, shape = alpha, scale = beta)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_w,
sig = 0.05,
q = rew,
kicks = c(1, 1),
par0 = list(beta, 1.8),
ncores = 4L,
alpha = 1.7,
beta = 1.2
)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
power_test(N = 200L,
B = 250L,
n = 250L,
f = pdf_ew,
sig = 0.05,
q = rew,
kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.5, 1.8)),
ncores = 4L,
alpha = 1.2,
sigma = 1,
theta = 1.3
)
tictoc::toc()
roxygen2::roxygenise()
