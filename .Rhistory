par0 = list("theta", 2), ncores = 4L, alpha = 1.4, sigma = 1.2, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 2e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = 4L, alpha = 1.4, sigma = 1.2, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 2e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = parallel::detectCores, alpha = 1.4, sigma = 1.2, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
install.packages("here")
library(here)
here()
getwd90
getwd()
here()
here("DESCR")
here("DESCRIPTION")
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 2e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = parallel::detectCores, alpha = 1.4, sigma = 1.2, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 2e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.2, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 20e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1.3), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.5, theta = 1.3)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 10L, sig = 0.01, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1.3), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.5, theta = 1.3)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 10L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1.3), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.5, theta = 1.3)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 10L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1.5), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.5, theta = 1.5)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 100L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1.5), ncores = parallel::detectCores(), alpha = 1.4, sigma = 1.5, theta = 1.5)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
install.packages(ggplot2)
"ggplot2"
library(ggplot2)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy))
ggplot(mpg, aes(x = displ, y = hwy, teste))
ggplot(mpg, aes(x = displ, y = hwy, testefwerfewrrt))
ggplot(mpg, aes(x = displ, y = hwy))
mpg
ggplot(1:10, 1:10)
ggplot(1:10, 1:10, aes(x = x, y = y))
ggplot(aes(x = 1:10, y = 1:10))
ggplot(mpg, aes(x = displ, y = hwy))
ggplot(mpg, aes(x = displ, y = hwy)) + aes(displ, hwy, colour = class)
ggplot(mpg, aes(displ, hwy, colour = class))
ggplot(mpg, aes(displ, hwy, colour = class))  + geom_abline()
ggplot(mpg, aes(displ, hwy, colour = class))  + geom_point()
mpg
ggplot(mpg, aes(displ, hwy, colour = class))  + geom_point()
ggplot(mpg, aes(cty)) + geom_histogram()
ggplot(mpg, aes(class)) + geom_histogram()
ggplot(mpg, aes(cyl)) + geom_histogram()
ggplot(mpg, aes(cyl)) + geom_freqpoly()
ggplot(mpg, aes(cyl)) + geom_freqpoly()
ggplot(mpg, aes(cyl)) + geom_freqpoly() + stat_bin(breaks = 30)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(breaks = 30)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(breaks = 3)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(breaks = 300)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(breaks = 1)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(breaks = 1, binwidth = 3)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(binwidth = 3)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(binwidth = 1)
ggplot(mpg, aes(cyl)) + geom_histogram() + stat_bin(binwidth = 0)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue")
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = rgb(1,1,1))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = rgb(1,1,1, 1))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = rgb(1,0.4,1, 1))
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = rgb(1,0.4,1, 0.4))
ggplot(mpg, aes(displ, hwy)) +
geom_point()
ggplot(mpg, aes(cty)) + geom_histogram()
ggplot(economics, aes(date, unemploy)) + geom_line()
ggplot(diamonds, aes(carat, price)) + geom_point()
ggplot(mpg, aes(cty, hwy)) + geom_point()
ggplot(data = mpg, aes(displ, cty))
ggplot(data = mpg, aes(displ, cty)) + geom_point()
ggplot(data = mpg, aes(displ, cty, colour = clas)) + geom_point()
ggplot(data = mpg, aes(displ, cty, colour = class)) + geom_point()
ggplot(data = mpg, aes(displ, cty, colour = drv)) + geom_point()
View(mpg)
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "blue"))
ggplot(mpg, aes(displ, hwy)) + geom_point(aes(colour = "red"))
ggplot(mpg, aes(displ, hwy))
ggplot(mpg, aes(displ, hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_null()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_grid(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_null(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_abline()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth()
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(method = lm)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(method = glm)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(method = loess)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(method = lm)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(span = 1)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(span = 2)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class) + geom_smooth(span = 20)
ggplot(mpg, aes(drv, hwy)) +
geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot(colours(T))
ggplot(mpg, aes(drv, hwy)) + geom_boxplot(colour = "blue")
ggplot(mpg, aes(drv, hwy)) + geom_boxplot(aes(colour = "blue"))
ggplot(mpg, aes(drv, hwy)) + geom_boxplot(aes(colour = "red"))
ggplot(mpg, aes(drv, hwy)) + geom_boxplot(aes(colour = "green"))
ggplot(mpg, aes(displ, colour = drv)) +
geom_freqpoly(binwidth = 0.5)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 0.5)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 0.01)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 0.01) +   facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 5) +   facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_classic()
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_dark()
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_light()
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_minimal()
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_test()
ggplot(mpg, aes(displ, fill = drv)) +
geom_histogram(binwidth = 1) +   facet_wrap(~drv, ncol = 1) + theme_void()
last_plot() + theme(panel.background = element_blank())
ggplot(data = mpg)
geom_point(mapping = aes(x = displ, y = hwy))
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(aes(x = displ, y = hwy))
library(LikRatioTest)
?mc
ls("packages:LikRatioTest")
ls("package:LikRatioTest")
?lrt
pdf_w <- function(par, x, var = NULL){
alpha <- par[1]
beta <- par[2]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
dweibull(x, shape = alpha, scale = beta)
}
rw <- function(n = 1L, alpha, beta){
rweibull(n = n, shape = alpha, scale = beta)
}
data <- rw(n = 100L, alpha = 1, beta = 1)
lrt(f = pdf_w, data = data, kicks = c(1, 1), par0 = list("beta", 1))
?mc
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 50L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = 4L, alpha = 1, sigma = 1, theta = 2)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
mc(N = 1e3L, n = 50L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 2), ncores = 4L, alpha = 1, sigma = 1, theta = 1)
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 100L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1), ncores = 4L, alpha = 1, sigma = 1, theta = 1)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 1e3L, n = 100L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list("theta", 1), ncores = 4L, alpha = 1, sigma = 1, theta = 3)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 5e3L, n = 100L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.2, 1.7)), ncores = 4L, alpha = 1, sigma = 1.2, theta = 1.7)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 5e3L, n = 100L, sig = 0.05, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.2, 1.7)), ncores = 4L, alpha = 0.5, sigma = 1.2, theta = 1.7)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 5e3L, n = 100L, sig = 0.15, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.2, 1.7)), ncores = 4L, alpha = 0.5, sigma = 1.2, theta = 1.7)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 5e3L, n = 100L, sig = 0.15, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.2, 1.7)), ncores = 4L, alpha = 0.5, sigma = 1.5, theta = 1.7)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
rew <- function(n, alpha, sigma, theta){
u <- runif(n, 0, 1)
sigma * (-log(1 - u ^ (1 / theta))) ^ (1 / alpha)
}
set.seed(1L, kind = "L'Ecuyer-CMRG")
tictoc::tic()
rejeicao <- mc(N = 5e3L, n = 100L, sig = 0.15, f = pdf_ew, q = rew, kicks = c(1, 1, 1),
par0 = list(c("sigma", "theta"), c(1.2, 1.7)), ncores = 4L, alpha = 5.5, sigma = 1.2, theta = 1.7)
# Proporção de rejeição ---------------------------------------------------
sum(rejeicao)/length(rejeicao)
tictoc::toc()
pdf_ew <- function(par, x, var = NULL){
alpha <- par[1]
sigma <- par[2]
theta <- par[3]
if (is.list(var)) eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha * theta / sigma * (1 - exp(-(x / sigma) ^ alpha)) ^ (theta - 1) *
exp(-(x / sigma) ^ alpha) * (x / sigma) ^ (alpha - 1)
}
var <- list("alpha", 1)
var
paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")
var <- list(c("alpha", "beta"), c(1,2))
var
paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")
eval(paste(var[[1]], " <- ", unlist(var[[2]]), sep = ""))
parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = ""))
eval(parse(text = paste(var[[1]], " <- ", unlist(var[[2]]), sep = "")))
alpha
beta
edit(lrt)
esp(1)
mc <- function(N = 1L, n = 50L, sig = 0.05, f, q, kicks, par0, ncores = 1L, ...){
mc_one_step <- function(i){
amostra <- q(n, ...)
result <- lrt(f = f, data = amostra, kicks = kicks,
par0 = par0)
# Selecionando uma amostra que não gere erro nos chutes iniciais ----------
repeat{
amostra <- q(n, ...)
result <- lrt(f = f, data = amostra, kicks = kicks,
par0 = par0)
if (!is.na(result)) break
}
q_teorico <- qchisq(p = 1 - sig, df = length(par0[[1]]))
list(sucess = ifelse(result > q_teorico, 1, 0), ratio = result) # Contando a rejeição.
} # End mc_one_step().
unlist(pbmcapply::pbmclapply(X = 1L:N, FUN = mc_one_step, mc.cores = ncores))
}
remove.packages("LikRatioTest", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
devtools::load_all()
devtools::document()
rm(list=ls())
devtools::document()
